events:

  # ### Swap Events ##########################################
  -
    name: swap.new
    label: New Swap
    level: INFO
    msg: A new swap was created for incoming transaction {{ $txidIn }}.
    msgVars: [txidIn]
    swapEventStream: true

  -
    name: swap.stateChange
    label: Swap State Change
    level: DEBUG
    msg: Entered state {{ $state }}
    msgVars: [state]
    eventVars: [state, isComplete, isError]
    swapEventStream: true

  -
    name: swap.transaction.update
    label: Swap Transaction
    level: INFO
    msg: Received {{ $currency($quantityIn) }} {{ $assetIn }}{{ $swap ? ' '.$fmt->fiatSuffix($swap->getSwapConfigStrategy(), $quantityIn, $assetIn) : ''}} from {{ $destination }} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [quantityIn,assetIn,destination,confirmations]
    swapEventStream: true

  -
    name: swap.confirming
    label: Confirming Swap
    level: INFO
    msg: Received {{ $currency($quantityIn) }} {{ $assetIn }}{{ $swap ? ' '.$fmt->fiatSuffix($swap->getSwapConfigStrategy(), $quantityIn, $assetIn) : ''}} from {{ $destination }} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [quantityIn,assetIn,destination,confirmations]
    swapEventStream: true

  -
    name: swap.confirmed
    label: Confirmed Swap
    level: INFO
    msg: Received {{ $currency($quantityIn) }} {{ $assetIn }}{{ $swap ? ' '.$fmt->fiatSuffix($swap->getSwapConfigStrategy(), $quantityIn, $assetIn) : ''}} from {{ $destination }} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [quantityIn,assetIn,destination,confirmations]
    swapEventStream: true

  -
    name: swap.sent
    label: Swap Sent
    level: INFO
    msg: |
        Sent {{ $currency($quantityOut) }} {{ $assetOut }}{{ (isset($changeOut) AND $changeOut > 0) ? " and {$currency($changeOut)} {$changeOutAsset} in change" : "" }} to {{ $destination }}.
    msgVars: [quantityOut,assetOut,destination,changeOut,changeOutAsset]
    swapEventStream: true

  -
    name: send.unconfirmed
    label: Unconfirmed Swap Send
    level: DEBUG
    msg: Unconfirmed send of {{ $currency($quantityOut) }} {{ $assetOut }} to {{ $destination }}.
    msgVars: [quantityOut,assetOut,destination]
    swapEventStream: true

  -
    name: send.confirmed
    label: Swap Send Confirmed
    level: INFO
    msg: |
        Sent {{ $currency($quantityOut) }} {{ $assetOut }}{{ (isset($changeOut) AND $changeOut > 0) ? " and {$currency($changeOut)} {$changeOutAsset} in change" : "" }} to {{ $destination }} with {{ $confirmationsOut }} {{ str_plural('confirmation', $confirmationsOut) }}.
    msgVars: [quantityOut,assetOut,destination,confirmationsOut]
    swapEventStream: true

  # ### Swap Errors
  -
    name: swap.failed
    label: Swap Failed
    level: WARNING
    msg: This swap send attempt failed.
    msgVars: []
    swapEventStream: true

  -
    name: swap.notReady
    label: Swap Not Ready
    level: WARNING
    msg: This swap could not be processed because it was not ready.
    msgVars: []
    swapEventStream: true

  # ### Refund

  -
    name: swap.refunding
    label: Refunding Swap
    level: DEBUG
    msg: Refunding {{ $currency($quantityOut) }} {{ $assetOut }} to {{ $destination }}.
    msgVars: [quantityOut,assetOut,destination]
    swapEventStream: true

  -
    name: swap.refunded
    label: Swap Refunded
    level: INFO
    msg: Refunded {{ $currency($quantityOut) }} {{ $assetOut }} to {{ $destination }}.
    msgVars: [quantityOut,assetOut,destination]
    swapEventStream: true


  # ### Income

  -
    name: income.forwarded
    label: Income Forwarded
    level: INFO
    msg: Sent an income forwarding payment of {{ $currency($quantityOut) }} {{ $assetOut }} to {{ $destination }} with transaction ID {{ $txid }}.
    msgVars: [quantityOut,assetOut,destination,txid]
    botEventStream: true

  -
    name: income.forwardSent
    label: Income Forwarding Sent
    level: DEBUG
    msg: Income of {{ $currency($quantityOut) }} {{ $assetOut }} was forwarded to {{ $destination }} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [quantityOut,assetOut,destination,confirmations]
    botEventStream: true



  # ### Bot Events ##########################################
  -
    name: tx.previous
    label: Previous Transaction
    level: DEBUG
    msg: Transaction {{ $txid }} was confirmed with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [txid, confirmations]

  -
    name: bot.stateChange
    label: Bot State Change
    level: DEBUG
    msg: Bot entered state {{ $state }}.
    msgVars: [state]
    botEventStream: true


    # ### Fuel Events
  -
    name: payment.unconfirmedMoveFuel
    label: Unconfirmed Swapbot Fuel Received
    level: INFO
    msg: Unconfirmed swapbot fuel of {{ $currency($inQty) }} {{ $inAsset }} received from {{ $source }} with transaction ID {{ $txid }}.
    msgVars: [inQty,inAsset,source,txid]
  -
    name: payment.moveFuelConfirmed
    label: Swapbot Fuel Received
    level: INFO
    msg: Swapbot fuel of {{ $currency($inQty) }} {{ $inAsset }} received from {{ $source }} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [inQty,inAsset,source,txid,confirmations]


    # ### Payment Events
  -
    name: payment.leaseCreated
    label: Lease Created
    level: INFO
    msg: Swapbot lease activated from {{ $start_date }} until {{ $end_date }}.
    msgVars: [start_date, end_date]
  -
    name: payment.monthlyFeePurchased
    label: Monthly Fee Purchased
    level: INFO
    msg: Purchased {{ $months }} {{ str_plural('month', $months) }} of swapbot rental for {{ $cost }} {{ $asset }}.
    msgVars: [months,cost,asset]
  -
    name: payment.firstMonthlyFeePaid
    label: First Monthly Fee Paid
    level: INFO
    msg: Paid {{ $qty }} {{ $asset }} as a monthly fee.
    msgVars: [qty,asset]
  -
    name: payment.monthlyFeePaid
    label: Monthly Fee Paid
    level: INFO
    msg: Paid {{ $qty }} {{ $asset }} as a monthly fee.
    msgVars: [qty,asset]

  -
    name: payment.unconfirmed
    label: Unconfirmed Payment Received
    level: INFO
    msg: Received an unconfirmed payment of {{ $currency($inQty) }} {{ $inAsset }} from {{ $source }}
    msgVars: [inQty,inAsset,source]
  -
    name: payment.confirmed
    label: Confirmed Payment Received
    level: INFO
    msg: Received a confirmed payment of {{ $currency($inQty) }} {{ $inAsset }} from {{ $source }}
    msgVars: [inQty,inAsset,source]
  -
    name: payment.previous
    label: Confirmed Payment Received
    level: DEBUG
    msg: Payment transaction {{ $txid }} was confirmed with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [txid, confirmations]
  -
    name: payment.unknown
    label: Confirmed Payment Received
    level: WARNING
    msg: Received a payment of {{ $currency($inQty) }} {{ $inAsset }} from {{ $source }} with transaction ID {{ $txid }}. This was not a valid payment.
    msgVars: [inQty,inAsset,source,txid]
  -
    name: payment.moveFuelCreated
    label: Move Fuel Transaction Created
    level: DEBUG
    msg: Moving initial swapbot fuel.  Sent {{ $currency($outQty) }} {{ $outAsset }} to {{ $destination }} with transaction ID {{ $txid }}
    msgVars: [outQty, outAsset, destination, txid]
  -
    name: payment.forwarded
    label: Payment Forwarded
    level: INFO
    msg: Forwarded a payment of {{ $currency($outQty) }} {{ $outAsset }} to {{ $destination }} with transaction ID {{ $txid }}
    msgVars: [outQty, outAsset, destination, txid]



    # ### Account Events
  -
    name: account.transferIncome
    label: Transfer Income
    level: DEBUG
    msg: Transferred Income for txid {{ $txid }} from {{ $from }} to {{ $to }}.
    msgVars: [txid, from, to]
  -
    name: account.transferIncomeFailed
    label: Transfer Income Failed
    level: WARNING
    msg: Transferred Income Failed for for txid {{ $txid }} from {{ $from }} to {{ $to }}.  {{ $error }}
    msgVars: [txid, from, to, error]
  -
    name: account.transferInventory
    label: Transfer Inventory
    level: DEBUG
    msg: Transferred inventory of {{ $currency($quantity) }} {{ $asset }} from account {{ $from }} to {{ $to }}.
    msgVars: [quantity, asset, from, to]
  -
    name: account.transferInventoryFailed
    label: Transfer Inventory Failed
    level: WARNING
    msg: Failed to transfer inventory of {{ $currency($quantity) }} {{ $asset }} from account {{ $from }} to {{ $to }}.
    msgVars: [quantity, asset, from, to]
  -
    name: account.closeSwapAccount
    label: Swap Account Closed
    level: DEBUG
    msg: Closed swap account.
    msgVars: []
  -
    name: account.closeSwapAccountFailed
    label: Swap Account Close Failed
    level: WARNING
    msg: Failed to close swap account.
    msgVars: []

  -
    name: bot.balancesSynced
    label: Bot Balances Synced
    level: DEBUG
    msg: Bot balances were synced.
    msgVars: []
  -
    name: bot.balancesSyncFailed
    label: Bot Balances Sync Failed
    level: WARNING
    msg: Failed to sync bot balances
    msgVars: []


# name: The system event id,                                      (swap.stateChange)
# label: A friendly label for this event type,                    (Swap State Change)
# level: INFO, DEBUG, WARNING
# msg: A dynamic message.                                         (Entered state {{ $state }})
# msgVars: Variables needed to create the message [state]
# eventVars: A filtered set of data stored in the database        ([state, isComplete, isError])
# swapEventStream: Whether to be shown in the public swap events  (true or false)
# botEventStream: Whether to be shown in the public bot events    (true or false)



# ### Standard Swap Vars ### #

# destination
# quantityIn
# assetIn
# txidIn
# quantityOut
# assetOut
# txidOut
# confirmations
# state
# isComplete
# isError
