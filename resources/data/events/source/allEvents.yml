events:

  # ### Swap Events ##########################################
  -
    name: swap.new
    label: New Swap
    level: INFO
    msg: A new swap was created for incoming transaction {{ $txidIn }}.
    msgVars: [txidIn]
    swapEventStream: false

  -
    name: swap.stateChange
    label: Swap State Change
    level: DEBUG
    msg: Entered state {{ $state }}
    msgVars: [state]
    eventVars: [state, isComplete, isError]
    swapEventStream: true

  -
    name: swap.transaction.update
    label: Swap Transaction
    level: INFO
    msg: Received {{ $quantityIn }} {{ $assetIn }} from {{ $destination }} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [quantityIn,assetIn,destination,confirmations]
    swapEventStream: true

  -
    name: swap.confirming
    label: Confirming Swap
    level: INFO
    msg: Received {{ $quantityIn }} {{ $assetIn }} from {{ $destination }} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [quantityIn,assetIn,destination,confirmations]
    swapEventStream: true

  -
    name: swap.confirmed
    label: Confirmed Swap
    level: INFO
    msg: Received {{ $quantityIn }} {{ $assetIn }} from {{ $destination }} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [quantityIn,assetIn,destination,confirmations]
    swapEventStream: true

  -
    name: swap.sent
    label: Swap Sent
    level: INFO
    msg: Sent {{ $quantityOut }} {{ $assetOut }} to {{ $destination }}.
    msgVars: [quantityOut,assetOut,destination]
    swapEventStream: true

  -
    name: send.unconfirmed
    label: Unconfirmed Swap Send
    level: DEBUG
    msg: Unconfirmed send of {{ $quantityOut }} {{ $assetOut }} to {{ $destination }}.
    msgVars: [quantityOut,assetOut,destination]
    swapEventStream: true

  -
    name: send.confirmed
    label: Swap Send Confirmed
    level: INFO
    msg: Sent {{ $quantityOut }} {{ $assetOut }} to {{ $destination }} with {{ $confirmationsOut }} {{ str_plural('confirmation', $confirmationsOut) }}.
    msgVars: [quantityOut,assetOut,destination,confirmationsOut]
    swapEventStream: true

  # ### Swap Errors
  -
    name: swap.failed
    label: Swap Failed
    level: WARNING
    msg: This swap send attempt failed.
    msgVars: []
    swapEventStream: true

  -
    name: swap.notReady
    label: Swap Not Ready
    level: WARNING
    msg: This swap could not be processed because it was not ready.
    msgVars: []
    swapEventStream: true

  # ### Refund

  -
    name: swap.refunding
    label: Refunding Swap
    level: DEBUG
    msg: Refunding {{ $quantityOut }} {{ $assetOut }} to {{ $destination }}.
    msgVars: [quantityOut,assetOut,destination]
    swapEventStream: true

  -
    name: swap.refunded
    label: Swap Refunded
    level: INFO
    msg: Refunded {{ $quantityOut }} {{ $assetOut }} to {{ $destination }}.
    msgVars: [quantityOut,assetOut,destination]
    swapEventStream: true


  # ### Bot Events ##########################################
  -
    name: tx.previous
    label: Previous Transaction
    level: DEBUG
    msgVars: [txid, confirmations]
    msg: Transaction {{ $txid }} was confirmed with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    botEventStream: true
  -
    name: bot.stateChange
    label: Bot State Change
    level: DEBUG
    msg: Bot entered state {{ $state }}.
    msgVars: [state]
    botEventStream: true


    # ### Fuel Events
  -
    name: payment.unconfirmedMoveFuel
    label: Unconfirmed Swapbot Fuel Received
    level: INFO
    msg: Unconfirmed swapbot fuel of {{$inQty}} {{$inAsset}} received from {{$source}} with transaction ID {{$txid}}.
    msgVars: [inQty,inAsset,source,txid]
  -
    name: payment.moveFuelConfirmed
    label: Swapbot Fuel Received
    level: INFO
    msg: Swapbot fuel of {{$inQty}} {{$inAsset}} received from {{$source}} with {{ $confirmations }} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [inQty,inAsset,source,txid,confirmations]


    # ### Payment Events
  -
    name: payment.leaseCreated
    label: Lease Created
    level: INFO
    msg: Swapbot lease activated from {{$start_date}} until {{$end_date}}.
    msgVars: [start_date, end_date]
  -
    name: payment.monthlyFeePurchased
    label: Monthly Fee Purchased
    level: INFO
    msg: Purchased {{$months}} {{ str_plural('month', $months) }} of swapbot rental for {{$cost}} {{$asset}}.
    msgVars: [months,cost,asset]
  -
    name: payment.firstMonthlyFeePaid
    label: First Monthly Fee Paid
    level: INFO
    msg: Paid {{$qty}} {{$asset}} as a monthly fee.
    msgVars: [qty,asset]
  -
    name: payment.monthlyFeePaid
    label: Monthly Fee Paid
    level: INFO
    msg: Paid {{$qty}} {{$asset}} as a monthly fee.
    msgVars: [qty,asset]

  -
    name: payment.unconfirmed
    label: Unconfirmed Payment Received
    level: INFO
    msg: Received an unconfirmed payment of {{$inQty}} {{$inAsset}} from {{$source}}
    msgVars: [inQty,inAsset,source]
  -
    name: payment.confirmed
    label: Confirmed Payment Received
    level: INFO
    msg: Received a confirmed payment of {{$inQty}} {{$inAsset}} from {{$source}}
    msgVars: [inQty,inAsset,source]
  -
    name: payment.previous
    label: Confirmed Payment Received
    level: DEBUG
    msg: Payment transaction {{$txid}} was confirmed with {{$confirmations}} {{ str_plural('confirmation', $confirmations) }}.
    msgVars: [txid, confirmations]
  -
    name: payment.unknown
    label: Confirmed Payment Received
    level: WARNING
    msg: Received a payment of {{$inQty}} {{$inAsset}} from {{$source}} with transaction ID {{$txid}}. This was not a valid payment.
    msgVars: [inQty,inAsset,source,txid]
  -
    name: payment.moveFuelCreated
    label: Move Fuel Transaction Created
    level: DEBUG
    msg: Moving initial swapbot fuel.  Sent {{$outQty}} {{$outAsset}} to {{$destination}} with transaction ID {{$txid}}
    msgVars: [outQty, outAsset, destination, txid]





# ### Standard Vars ### #

# destination
# quantityIn
# assetIn
# txidIn
# quantityOut
# assetOut
# txidOut
# confirmations
# state
# isComplete
# isError
